{
  "custom": {},
  "params": {
    "icon_color_dark_theme": "#cac5c4",
    "icon_color_light_theme": "#636363",
    "text": "test\\test"
  },
  "propConfig": {
    "params.icon_color_dark_theme": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.icon_color_light_theme": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.text": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 24,
      "width": 24
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "IFrame"
        },
        "position": {
          "grow": 1
        },
        "propConfig": {
          "props.src": {
            "binding": {
              "config": {
                "struct": {
                  "icon_color_dark": "{view.params.icon_color_dark_theme}",
                  "icon_color_light": "{view.params.icon_color_light_theme}",
                  "text": "{view.params.text}",
                  "theme": "{session.props.theme}"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\t\n\tif \u0027light\u0027 in value.theme:\n\t\ticon_fill \u003d value.icon_color_light.replace(\u0027#\u0027, \u0027%23\u0027)\n\telse:\n\t\ticon_fill \u003d value.icon_color_dark.replace(\u0027#\u0027, \u0027%23\u0027)\n\t\n\t# Format text and prevent javascript injection\n\tdef escape_html(s, quote\u003dNone):\n\t\t\t\u0027\u0027\u0027Replace special characters \"\u0026\", \"\u003c\" and \"\u003e\" to HTML-safe sequences.\n\t\t\tIf the optional flag quote is true, the quotation mark character (\")\n\t\t\tis also translated.\u0027\u0027\u0027\n\t\t\ts \u003d s.replace(\"\u0026\", \"\u0026amp;\") # Must be done first!\n\t\t\ts \u003d s.replace(\"\u003c\", \"\u0026lt;\")\n\t\t\ts \u003d s.replace(\"\u003e\", \"\u0026gt;\")\n\t\t\tif quote:\n\t\t\t\t\ts \u003d s.replace(\u0027\"\u0027, \"\u0026quot;\")\n\t\t\treturn s\n\n\t# Sanitize variables for HTML/JS\n\tescape_js \u003d {\n\t\t\u0027\\\\\u0027: \u0027\\\\\\\\\u0027,\n\t\t\u0027\\\u0027\u0027: \u0027\\\\\\\u0027\u0027,\n\t\t\u0027\\\"\u0027: \u0027\\\\\\\"\u0027,\n\t\t\u0027\\n\u0027: \u0027\\\\n\u0027,\n\t\t\u0027\\r\u0027: \u0027\\\\r\u0027,\n\t\t\u0027\\t\u0027: \u0027\\\\t\u0027,\n\t\t\u0027\\b\u0027: \u0027\\\\b\u0027,\n\t\t\u0027\\f\u0027: \u0027\\\\f\u0027\n\t\t}\n\ttext_to_copy \u003d \u0027\u0027.join(escape_js.get(c, c) for c in value.text)\n\t\n\tescape_html \u003d {\n\t\t\u0027\u0026\u0027: \u0027\u0026amp;\u0027,\n\t\t\u0027\u003c\u0027: \u0027\u0026lt;\u0027,\n\t\t\u0027\u003e\u0027: \u0027\u0026gt;\u0027,\n\t\t\u0027\"\u0027: \u0027\u0026quot;\u0027\n\t}\n\ticon_fill \u003d \u0027\u0027.join(escape_html.get(c, c) for c in icon_fill)\n\t\n\tdata \u003d \"\"\"data:text/html;charset\u003dutf-8,\u003chtml\u003e\n\t\t\u003chead\u003e\n\t\t\t\u003clink rel\u003d\"stylesheet\" href\u003d\"https://fonts.googleapis.com/icon?family\u003dMaterial+Icons\"\u003e\n\t\t\u003c/head\u003e\n\t\t\u003cbody\u003e\n\t\t\t\u003csvg id\u003d\u0027copyIcon\u0027 xmlns\u003d\u0027http://www.w3.org/2000/svg\u0027\n\t\t\t\t\t\tfill\u003d\u0027{icon_fill}\u0027\n\t\t\t\t\t\twidth\u003d\u0027100%\u0027\n\t\t\t\t\t\theight\u003d\u0027100%\u0027\n\t\t\t\t\t\tviewBox\u003d\u00270 0 19 22\u0027\n\t\t\t\t\t\tstyle\u003d\u0027transition: transform 0.2s; cursor: pointer; opacity 0.2s; opacity: 0.8;\u0027\n\t\t\t\t\t\tonmousedown\u003d\"this.style.transform \u003d \u0027scale(0.8)\u0027; copyToClipboard(event)\"\n\t\t\t\t\t\tonmouseover\u003d\"this.style.opacity \u003d \u00271.0\u0027;\"\n\t\t\t\t\t\tonmouseout\u003d\"this.style.opacity \u003d \u00270.8\u0027; this.style.transform \u003d \u0027scale(1)\u0027;\"\n\t\t\t\t\t\tonmouseup\u003d\"this.style.transform \u003d \u0027scale(1)\u0027;\"\u003e\n\t\t\t\t\t\u003cpath d\u003d\"m-2-1h24v24h-24z\" fill\u003d\"none\"/\u003e\n\t\t\t\t\t\u003cpath d\u003d\"m14 0h-12c-1.1 0-2 0.9-2 2v14h2v-14h12zm3 4h-11c-1.1 0-2 0.9-2 2v14c0 1.1 0.9 2 2 2h11c1.1 0 2-0.9 2-2v-14c0-1.1-0.9-2-2-2zm0 16h-11v-14h11z\"/\u003e \n\t\t\t\u003c/svg\u003e\n\t\t\t\u003cscript\u003e\n\t\t\t\tfunction copyToClipboard() {{\n\t\t\t\t\t\t\tvar tempInput \u003d document.createElement(\u0027textarea\u0027);\n\t\t\t\t\t\t\t\ttempInput.value \u003d \u0027{text}\u0027;\n\t\t\t\t\t\t\t\tdocument.body.appendChild(tempInput);\n\t\t\t\t\t\t\t\ttempInput.select();\n\t\t\t\t\t\t\t\tdocument.execCommand(\u0027copy\u0027);\n\t\t\t\t\t\t\t\tdocument.body.removeChild(tempInput);\n\t\t\t\t\t}}\n\t\t\t\u003c/script\u003e\n\t\t\u003c/body\u003e\u003c/html\u003e\n\t\"\"\".format(\n\t\ttext\u003dtext_to_copy,\n\t\ticon_fill\u003dicon_fill\n\t)\n\n\treturn data",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          }
        },
        "props": {
          "allowFullScreen": true,
          "style": {
            "margin": "-7px",
            "overflow": "visible"
          }
        },
        "type": "ia.display.iframe"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "overflow": "visible"
      }
    },
    "type": "ia.container.flex"
  }
}