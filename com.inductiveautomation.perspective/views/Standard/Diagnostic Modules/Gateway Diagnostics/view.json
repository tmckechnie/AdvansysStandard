{
  "custom": {},
  "params": {
    "Gateways": {
      "AdvansysPrimary": {
        "GatewayDiagnosticsViewPath": "Standard/Diagnostic Modules/Gateway Diagnostics Components/Master Gateway Diagnostics",
        "SystemDiagnosticsTagPath": "[StandardS71500]System/Diagnostics"
      }
    }
  },
  "propConfig": {
    "params.Gateways": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 1488,
      "width": 1308
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "basis": "102px"
            },
            "props": {
              "style": {
                "classes": "Standard/Popups/HeaderText"
              },
              "text": "Gateway"
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "Dropdown"
            },
            "position": {
              "basis": "300px"
            },
            "propConfig": {
              "props.options": {
                "binding": {
                  "config": {
                    "path": "view.params.Gateways"
                  },
                  "transforms": [
                    {
                      "code": "\tgatewaysAvailable \u003d []\n\t\n\tfor gatewayName in value:\n\t\tgatewayOption \u003d {\n\t\t\t\t\"label\":gatewayName,\n\t\t\t\t\"value\":gatewayName\n\t\t\t\t\t}\n\t\tgatewaysAvailable.append(gatewayOption)\n\tgatewaysAvailableSorted \u003d sorted(gatewaysAvailable, key\u003dlambda row: row[\"label\"])\t\n\treturn gatewaysAvailableSorted",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "value": "AdvansysPrimary"
            },
            "type": "ia.input.dropdown"
          }
        ],
        "meta": {
          "name": "Gateway Selection Flex"
        },
        "position": {
          "basis": "55px"
        },
        "props": {
          "style": {
            "marginTop": 15
          }
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Gateway Diagnostics"
        },
        "position": {
          "basis": "320px",
          "grow": 1
        },
        "propConfig": {
          "props.params.SystemDiagnosticsTagPath": {
            "binding": {
              "config": {
                "struct": {
                  "GatewaySelected": "{../Gateway Selection Flex/Dropdown.props.value}",
                  "GatewaysAvailable": "{view.params.Gateways}"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\tGatewaysAvailable \u003d value[\"GatewaysAvailable\"]\n\tGatewaySelected \u003d value[\"GatewaySelected\"]\n\tSystemsTagPath \u003d GatewaysAvailable[GatewaySelected][\"SystemDiagnosticsTagPath\"]\n\treturn SystemsTagPath",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          },
          "props.path": {
            "binding": {
              "config": {
                "struct": {
                  "GatewaySelected": "{../Gateway Selection Flex/Dropdown.props.value}",
                  "GatewaysAvailable": "{view.params.Gateways}"
                },
                "waitOnAll": true
              },
              "transforms": [
                {
                  "code": "\tGatewaysAvailable \u003d value[\"GatewaysAvailable\"]\n\tGatewaySelected \u003d value[\"GatewaySelected\"]\n\tGatewayDiagnosticsViewPath \u003d GatewaysAvailable[GatewaySelected][\"GatewayDiagnosticsViewPath\"]\n\treturn GatewayDiagnosticsViewPath",
                  "type": "script"
                }
              ],
              "type": "expr-struct"
            }
          }
        },
        "type": "ia.display.view"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column"
    },
    "type": "ia.container.flex"
  }
}