{
  "custom": {
    "eventAttributeValues": [
      {
        "eventAttributeID": 235,
        "value": "Undefined"
      },
      {
        "eventAttributeID": 237,
        "value": "Undefined"
      }
    ]
  },
  "params": {
    "eventAttributeValues": [
      {
        "name": "Mode",
        "value": "Undefined"
      },
      {
        "name": "State",
        "value": "Undefined"
      }
    ],
    "eventAttributesDefinition": {
      "Equipment": {
        "eventAttributeID": 238
      },
      "Mode": {
        "eventAttributeID": 235
      },
      "Reason Level 1": {
        "eventAttributeID": 239
      },
      "State": {
        "eventAttributeID": 237
      },
      "Work Order": {
        "eventAttributeID": 234
      }
    },
    "formID": "",
    "text": "Execute",
    "timestamp": {
      "action": "now",
      "value": ""
    }
  },
  "propConfig": {
    "custom.eventAttributeValues": {
      "binding": {
        "config": {
          "path": "view.params.eventAttributeValues"
        },
        "transforms": [
          {
            "code": "\teventAttributesDefinition \u003d self.params.eventAttributesDefinition\n\teventAttributeValues \u003d []\n\tfor eventAttributeValue in value:\n\t\t\n\t\tname \u003d eventAttributeValue[\u0027name\u0027]\n\t\tvalue \u003d eventAttributeValue[\u0027value\u0027]\n\t\teventAttributeID \u003d eventAttributesDefinition[name][\u0027eventAttributeID\u0027]\n\t\teventAttributeValue \u003d {}\n\t\teventAttributeValue[\u0027eventAttributeID\u0027] \u003d eventAttributeID\n\t\teventAttributeValue[\u0027value\u0027] \u003d value\n\t\t\n\t\teventAttributeValues.append(eventAttributeValue)\n\treturn eventAttributeValues",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "custom.key": {
      "persistent": true
    },
    "custom.state": {
      "persistent": true
    },
    "params.eventAttributeValues": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.eventAttributesDefinition": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.formID": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.state": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.text": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.timestamp": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 50,
      "width": 144
    }
  },
  "root": {
    "children": [
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\t\n\tlogger \u003d system.util.getLogger(\u0027Split Current Event and Add Event Attribute Values\u0027)\n\tdebug \u003d self.session.custom.debug\n\tmessage \u003d \u0027Split Current Event....\u0027\n\tFlow.Common.LogMessage(logger,message,Debug\u003ddebug)\n\tusername \u003d self.session.custom.flowUser\n\tformID \u003d self.view.params.formID\n\t\n\ttimestamp \u003d self.view.params.timestamp\n\tsplitTimeStamp \u003d system.date.now()\n\tif timestamp[\u0027action\u0027] \u003c\u003e\u0027now\u0027:\n\t\tsplitTimeStamp \u003d timestamp[\u0027value\u0027]\n\t\n\teventPeriods \u003d Flow.Event.SplitCurrentEvent(Connection\u003dNone,Username\u003dusername, FormID \u003d formID,SplitTimeStamp\u003dsplitTimeStamp)\n\tmessage \u003d \u0027EventPeriods:\u0027 + str(eventPeriods)\n\tFlow.Common.LogMessage(logger,message,Debug\u003ddebug)\n\t\n\t#Get Last Event Period\n\teventPeriod \u003d eventPeriods[1]\n\tmessage \u003d \u0027Split Current Event....Done!\u0027\n\tFlow.Common.LogMessage(logger,message,Debug\u003ddebug)\n\t##Add State attribute\n\n\teventAttributeValues \u003d self.view.custom.eventAttributeValues\n\tresponse \u003d Flow.Event.UpdateEventAttributeValues(Connection\u003dNone,Username\u003dusername,EventPeriod\u003deventPeriod,EventAttributeValues\u003deventAttributeValues)\n"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Button"
        },
        "position": {
          "basis": "34px",
          "grow": 1
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "view.params.text"
              },
              "type": "property"
            }
          }
        },
        "type": "ia.input.button"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column"
    },
    "type": "ia.container.flex"
  }
}