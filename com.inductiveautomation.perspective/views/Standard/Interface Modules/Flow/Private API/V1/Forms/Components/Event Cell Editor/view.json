{
  "custom": {},
  "params": {
    "rowData": {
      "displayOrder": 6,
      "editType": "TextField",
      "name": "Equipment",
      "options": [
        "Unscrambler Posimat",
        "Capping Device",
        "Filler"
      ],
      "value": "Filler"
    }
  },
  "propConfig": {
    "params.options": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.rowData": {
      "paramDirection": "inout",
      "persistent": true
    },
    "params.value": {
      "paramDirection": "inout",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 30,
      "width": 173
    }
  },
  "root": {
    "children": [
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\trowData \u003d self.view.params.rowData\n\tif \u0027editType\u0027 in rowData:\n\t\tpayload \u003d {}\n\t\tpayload[\u0027name\u0027] \u003d self.view.params.rowData.name\n\t\tpayload[\u0027value\u0027] \u003d self.props.value\n\t\tsystem.perspective.print(\u0027Message Send From Dropdown:\u0027 + str(payload))\n\t\tsystem.perspective.sendMessage(messageType\u003d\"rowUpdate\",payload \u003d payload,scope\u003d\u0027page\u0027)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Dropdown"
        },
        "position": {
          "basis": "36px",
          "grow": 1
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "try({view.params.rowData.editType} \u003d \"Dropdown\",false)"
              },
              "type": "expr"
            }
          },
          "props.options": {
            "binding": {
              "config": {
                "path": "view.params.rowData.options"
              },
              "transforms": [
                {
                  "code": "\toptions \u003d []\n\t\n\tfor available in value:\n\t\toption \u003d {}\n\t\toption[\u0027label\u0027] \u003d available\n\t\toption[\u0027value\u0027] \u003d available\n\t\toptions.append(option)\n\t\n\treturn options",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.value": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.params.rowData.value"
              },
              "type": "property"
            }
          }
        },
        "type": "ia.input.dropdown"
      },
      {
        "meta": {
          "name": "TextField"
        },
        "position": {
          "basis": "32px"
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "!{../Dropdown.position.display}"
              },
              "type": "expr"
            }
          },
          "props.enabled": {
            "binding": {
              "config": {
                "expression": "isGood({view.params.rowData.editType})"
              },
              "type": "expr"
            }
          },
          "props.text": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.params.rowData.value"
              },
              "type": "property"
            },
            "onChange": {
              "enabled": null,
              "script": "\trowData \u003d self.view.params.rowData\n\tenabled \u003d self.props.enabled\n\tif enabled and \u0027editType\u0027 in rowData:\n\t\tpayload \u003d {}\n\t\tpayload[\u0027name\u0027] \u003d self.view.params.rowData.name\n\t\tpayload[\u0027value\u0027] \u003d currentValue\n\t\tsystem.perspective.print(\u0027Message Send From TextBox:\u0027 + str(payload) + \u0027--Type:\u0027 + str(type(payload)))\n\t\tsystem.perspective.sendMessage(messageType\u003d\"rowUpdate\",payload \u003d payload,scope\u003d\u0027page\u0027)"
            }
          }
        },
        "type": "ia.input.text-field"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column"
    },
    "type": "ia.container.flex"
  }
}