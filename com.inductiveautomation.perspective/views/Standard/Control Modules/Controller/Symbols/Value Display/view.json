{
  "custom": {
    "AlarmSummary": {
      "HighestActivePriority": 0,
      "HighestActivePriorityName": null,
      "HighestUnackedPriority": 0,
      "HighestUnackedPriorityName": null,
      "Overall": {
        "ActiveAckCount": 0,
        "ActiveUnackCount": 0,
        "ClearUnackCount": 0,
        "Detail": [],
        "ShelvedCount": 0,
        "Total": 0
      },
      "PriorityDetail": {
        "Critical": {
          "ActiveAckCount": 0,
          "ActiveUnackCount": 0,
          "ClearUnackCount": 0,
          "Detail": [],
          "ShelvedCount": 0,
          "Total": 0
        },
        "High": {
          "ActiveAckCount": 0,
          "ActiveUnackCount": 0,
          "ClearUnackCount": 0,
          "Detail": [],
          "ShelvedCount": 0,
          "Total": 0
        },
        "Low": {
          "ActiveAckCount": 0,
          "ActiveUnackCount": 0,
          "ClearUnackCount": 0,
          "Detail": [],
          "ShelvedCount": 0,
          "Total": 0
        },
        "Medium": {
          "ActiveAckCount": 0,
          "ActiveUnackCount": 0,
          "ClearUnackCount": 0,
          "Detail": [],
          "ShelvedCount": 0,
          "Total": 0
        }
      }
    },
    "ModuleType": "Controller",
    "References": {
      "Abbreviation": "S"
    },
    "Styling": {
      "Base": {},
      "Default": {
        "Container": "Standard/Body/Symbols/Displays/Container"
      },
      "Display": {}
    }
  },
  "params": {
    "Cfg": {
      "Display": {
        "Output": true,
        "ProcessVariable": true,
        "Setpoint": true
      }
    },
    "TagPath": "[StandardS71500]Standard/Modules/Control Modules/CMTESTING/CMs/Controller01"
  },
  "propConfig": {
    "custom.AlarmSummary": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "TagPath": "{view.params.TagPath}"
          },
          "tagPath": "{TagPath}/Alarms/Summary/Information"
        },
        "type": "tag"
      },
      "persistent": true
    },
    "custom.ModuleType": {
      "persistent": true
    },
    "custom.References": {
      "persistent": true
    },
    "custom.References.Abbreviation": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "TagPath": "{view.params.TagPath}"
          },
          "tagPath": "{TagPath}/Parameters.InstrumentType"
        },
        "enabled": false,
        "type": "tag"
      }
    },
    "custom.References.Description": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "TagPath": "{view.params.TagPath}"
          },
          "tagPath": "{TagPath}/Metadata/Description"
        },
        "type": "tag"
      }
    },
    "custom.References.Identify": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "TagPath": "{view.params.TagPath}"
          },
          "tagPath": "{TagPath}/Id/Identify"
        },
        "type": "tag"
      }
    },
    "custom.References.InProcessVariable": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "TagPath": "{view.params.TagPath}"
          },
          "tagPath": "{TagPath}/In/ProcessVariable"
        },
        "type": "tag"
      }
    },
    "custom.References.InProcessVariableEngUnits": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "TagPath": "{view.params.TagPath}"
          },
          "tagPath": "{TagPath}/Metadata/ProcessVariableEngUnits"
        },
        "type": "tag"
      }
    },
    "custom.References.InProcessVariableFormatString": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "TagPath": "{view.params.TagPath}"
          },
          "tagPath": "{TagPath}/In/ProcessVariable.FormatString"
        },
        "type": "tag"
      }
    },
    "custom.References.InProcessVariableFormatted": {
      "binding": {
        "config": {
          "expression": "numberFormat({view.custom.References.InProcessVariable},{view.custom.References.InProcessVariableFormatString}) + \" \" + {view.custom.References.InProcessVariableEngUnits}"
        },
        "type": "expr"
      }
    },
    "custom.References.InstanceName": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "TagPath": "{view.params.TagPath}"
          },
          "tagPath": "{TagPath}/Metadata/InstanceName"
        },
        "type": "tag"
      }
    },
    "custom.References.Mode": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "TagPath": "{view.params.TagPath}"
          },
          "tagPath": "{TagPath}/Cmd/Mode"
        },
        "type": "tag"
      }
    },
    "custom.References.OutOutput": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "TagPath": "{view.params.TagPath}"
          },
          "tagPath": "{TagPath}/Out/Output"
        },
        "type": "tag"
      }
    },
    "custom.References.OutOutputEngUnits": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "TagPath": "{view.params.TagPath}"
          },
          "tagPath": "{TagPath}/Metadata/OutputEngUnits"
        },
        "type": "tag"
      }
    },
    "custom.References.OutOutputFormatString": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "TagPath": "{view.params.TagPath}"
          },
          "tagPath": "{TagPath}/Out/Output.FormatString"
        },
        "type": "tag"
      }
    },
    "custom.References.OutOutputFormatted": {
      "binding": {
        "config": {
          "expression": "numberFormat({view.custom.References.OutOutput},{view.custom.References.OutOutputFormatString}) + \" \" + {view.custom.References.OutOutputEngUnits}"
        },
        "type": "expr"
      }
    },
    "custom.References.ShortDescription": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "TagPath": "{view.params.TagPath}"
          },
          "tagPath": "{TagPath}/Metadata/ShortDescription"
        },
        "type": "tag"
      }
    },
    "custom.References.StsSetpoint": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "TagPath": "{view.params.TagPath}"
          },
          "tagPath": "{TagPath}/Sts/Setpoint"
        },
        "type": "tag"
      }
    },
    "custom.References.StsSetpointEngUnits": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "TagPath": "{view.params.TagPath}"
          },
          "tagPath": "{TagPath}/Metadata/ProcessVariableEngUnits"
        },
        "type": "tag"
      }
    },
    "custom.References.StsSetpointFormatString": {
      "binding": {
        "config": {
          "fallbackDelay": 2.5,
          "mode": "indirect",
          "references": {
            "TagPath": "{view.params.TagPath}"
          },
          "tagPath": "{TagPath}/Sts/Setpoint.FormatString"
        },
        "type": "tag"
      }
    },
    "custom.References.StsSetpointFormatted": {
      "binding": {
        "config": {
          "expression": "numberFormat({view.custom.References.StsSetpoint},{view.custom.References.StsSetpointFormatString}) + \" \" + {view.custom.References.StsSetpointEngUnits}"
        },
        "type": "expr"
      }
    },
    "custom.Styling": {
      "persistent": true
    },
    "custom.Styling.Base.Alarm": {
      "binding": {
        "config": {
          "path": "view.custom.AlarmSummary"
        },
        "transforms": [
          {
            "code": "\t \n\tstyle \u003d Standard.Modules.Alarms.GetAlarmStyle(AlarmSummary\u003dvalue,ComponentPart\u003d\"Outline\")\n\treturn style[\u0027classes\u0027]\n",
            "type": "script"
          }
        ],
        "type": "property"
      }
    },
    "custom.Styling.Base.Identify": {
      "binding": {
        "config": {
          "path": "view.custom.References.Identify"
        },
        "transforms": [
          {
            "fallback": "Standard/Body/Symbols/Base/Basic",
            "inputType": "scalar",
            "mappings": [
              {
                "input": true,
                "output": "Standard/Body/Symbols/Base/Basic Standard/Body/Symbols/Base/Identify"
              }
            ],
            "outputType": "style-list",
            "type": "map"
          }
        ],
        "type": "property"
      }
    },
    "custom.Styling.Display.Mode": {
      "binding": {
        "config": {
          "path": "view.custom.References.Mode"
        },
        "transforms": [
          {
            "code": "\tbaseStyle \u003d \"Standard/Body/Symbols/Displays/Mode\"\n\tstyle \u003d \"\"\t\t\n\tmode \u003d value\n\tif mode \u003d\u003d 0:#Maintenance\n\t\tstyle +\u003d  \" \" + baseStyle + \"/Maintenance\"\t\t\t\n\telif mode \u003d\u003d 1:#Manual\n\t\tstyle +\u003d \" \" + baseStyle + \"/Manual\"\n\telif mode \u003d\u003d 2:#Auto\n\t\tstyle +\u003d \" \" + baseStyle + \"/Auto\"\n\treturn style",
            "type": "script"
          }
        ],
        "type": "property"
      }
    },
    "params.Cfg": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.TagPath": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 75,
      "width": 125
    },
    "dropConfig": {
      "udts": [
        {
          "action": "path",
          "param": "TagPath",
          "type": "Application Default/Control Modules/Controller"
        }
      ]
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "meta": {
              "name": "Setpoint"
            },
            "position": {
              "basis": "32px",
              "grow": 1
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "view.params.Cfg.Display.Setpoint"
                  },
                  "type": "property"
                }
              },
              "props.style.classes": {
                "persistent": true
              },
              "props.text": {
                "binding": {
                  "config": {
                    "expression": "\"SP: \" + {view.custom.References.StsSetpointFormatted}"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "margin": 2,
                "marginRight": 2,
                "textAlign": "center"
              },
              "textStyle": {
                "classes": "Standard/Body/Symbols/Displays/Text "
              }
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "ProcessVariable"
            },
            "position": {
              "basis": "32px",
              "grow": 1
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "view.params.Cfg.Display.ProcessVariable"
                  },
                  "type": "property"
                }
              },
              "props.style.classes": {
                "persistent": true
              },
              "props.text": {
                "binding": {
                  "config": {
                    "expression": "\"PV: \" + {view.custom.References.InProcessVariableFormatted}"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "margin": 2,
                "marginRight": 2,
                "textAlign": "center"
              },
              "textStyle": {
                "classes": "Standard/Body/Symbols/Displays/Text"
              }
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "Output"
            },
            "position": {
              "basis": "32px",
              "grow": 1
            },
            "propConfig": {
              "position.display": {
                "binding": {
                  "config": {
                    "path": "view.params.Cfg.Display.Output"
                  },
                  "type": "property"
                }
              },
              "props.style.classes": {
                "persistent": true
              },
              "props.text": {
                "binding": {
                  "config": {
                    "expression": "\"MV: \" + {view.custom.References.OutOutputFormatted}"
                  },
                  "type": "expr"
                }
              }
            },
            "props": {
              "style": {
                "margin": 2,
                "marginRight": 2,
                "textAlign": "center"
              },
              "textStyle": {
                "classes": "Standard/Body/Symbols/Displays/Text"
              }
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "DisplayContainer",
          "tooltip": {
            "enabled": true
          }
        },
        "position": {
          "basis": "30px",
          "grow": 1
        },
        "propConfig": {
          "meta.tooltip.text": {
            "binding": {
              "config": {
                "path": "view.custom.References.Description"
              },
              "type": "property"
            }
          },
          "props.style.classes": {
            "binding": {
              "config": {
                "expression": "{view.custom.Styling.Base.Alarm} + \" \" + {view.custom.Styling.Display.Mode} + \" \" + {view.custom.Styling.Default.Container}"
              },
              "type": "expr"
            },
            "persistent": true
          }
        },
        "props": {
          "direction": "column",
          "style": {
            "classes": "  Standard/Body/Symbols/Displays/Mode/Auto Standard/Body/Symbols/Displays/Container",
            "margin": 3,
            "outline-offset": 1
          }
        },
        "type": "ia.container.flex"
      }
    ],
    "events": {
      "dom": {
        "onClick": {
          "config": {
            "script": "\ttagPath \u003d self.view.params.TagPath\n\tinstanceName \u003d self.view.custom.References.InstanceName\n\tdescription \u003d self.view.custom.References.ShortDescription\n\ttitle \u003d instanceName + \" - \" + description\n\tparamsObject \u003d {\"TagPath\":tagPath}\n\tmoduleType \u003d self.view.custom.ModuleType\n\tfaceplatePath \u003d \"Standard/Control Modules/\"+moduleType+\"/Faceplates/Faceplate\"\n\tStandard.Modules.Common.OpenFaceplate(ParamsObject\u003dparamsObject,Title\u003dtitle,FaceplatePath\u003dfaceplatePath)\t"
          },
          "scope": "G",
          "type": "script"
        }
      }
    },
    "meta": {
      "name": "root"
    },
    "propConfig": {
      "props.style.classes": {
        "binding": {
          "config": {
            "path": "view.custom.Styling.Base.Identify"
          },
          "type": "property"
        }
      }
    },
    "props": {
      "direction": "column",
      "style": {}
    },
    "type": "ia.container.flex"
  }
}