{
  "custom": {
    "baseFolderPath": "",
    "collisionPolicy": "m",
    "controlModulePath": "Standard/Control Modules/Application",
    "data": [
      {
        "Header 1": "Row 1",
        "Header 2": 1.4140123496482004,
        "Header 3": 1.8151793311169206,
        "Header 4": 1.086041401570138,
        "Header 5": 4.01055976608445,
        "Header 6": 5.705808543089285
      },
      {
        "Header 1": "Row 2",
        "Header 2": 1.991567886315323,
        "Header 3": 3.953872281662977,
        "Header 4": 2.99221924473853,
        "Header 5": 8.481402112851198,
        "Header 6": 0.5895837739206489
      },
      {
        "Header 1": "Row 3",
        "Header 2": 6.187543883660841,
        "Header 3": 8.983457955027758,
        "Header 4": 5.097411002257442,
        "Header 5": 2.589212855446598,
        "Header 6": 1.7088841687286271
      },
      {
        "Header 1": "Row 4",
        "Header 2": 5.139241542968625,
        "Header 3": 3.729745848112235,
        "Header 4": 4.876136735468087,
        "Header 5": 3.2729528551810585,
        "Header 6": 0.47388265555326714
      },
      {
        "Header 1": "Row 5",
        "Header 2": 0.13050243952194118,
        "Header 3": 8.531009998329191,
        "Header 4": 0.8061093150596121,
        "Header 5": 8.654955925686682,
        "Header 6": 4.417602788740304
      },
      {
        "Header 1": "Row 6",
        "Header 2": 5.672452429681966,
        "Header 3": 1.9362832282342757,
        "Header 4": 4.512878404877444,
        "Header 5": 3.5153713000953326,
        "Header 6": 0.22048352154931727
      },
      {
        "Header 1": "Row 7",
        "Header 2": 0.5750261537614543,
        "Header 3": 6.681548868458491,
        "Header 4": 6.359876492407058,
        "Header 5": 7.758852968753062,
        "Header 6": 9.917562824359068
      },
      {
        "Header 1": "Row 8",
        "Header 2": 7.69945555921271,
        "Header 3": 5.6043939603343516,
        "Header 4": 5.884444391113578,
        "Header 5": 9.194925628903523,
        "Header 6": 0.7640007512110991
      },
      {
        "Header 1": "Row 9",
        "Header 2": 6.728469801658878,
        "Header 3": 4.444774455806324,
        "Header 4": 0.748192511143887,
        "Header 5": 6.101335522192834,
        "Header 6": 5.8030225058330265
      },
      {
        "Header 1": "Row 10",
        "Header 2": 3.523863045074598,
        "Header 3": 3.653459399844011,
        "Header 4": 2.2442418856103385,
        "Header 5": 1.0905700049139866,
        "Header 6": 6.743155579535754
      }
    ],
    "dataList": "",
    "filePath": "C:\\Projects\\FMG\\FMG ISA S95 v2 (CSV).csv",
    "modelItem": "Model Item",
    "modelItemPath": "Standard/Model/Model Item"
  },
  "params": {},
  "propConfig": {
    "custom.baseFolderPath": {
      "persistent": true
    },
    "custom.collisionPolicy": {
      "persistent": true
    },
    "custom.controlModulePath": {
      "persistent": true
    },
    "custom.data": {
      "persistent": true
    },
    "custom.dataList": {
      "persistent": true
    },
    "custom.filePath": {
      "persistent": true
    },
    "custom.modelItem": {
      "persistent": true
    },
    "custom.modelItemPath": {
      "persistent": true
    }
  },
  "props": {},
  "root": {
    "children": [
      {
        "children": [
          {
            "meta": {
              "name": "labelFilePath"
            },
            "position": {
              "basis": "32px"
            },
            "props": {
              "style": {
                "backgroundColor": "#FFCCCC"
              },
              "text": "File Path"
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "textFieldFilePath"
            },
            "position": {
              "basis": "32px"
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "view.custom.filePath"
                  },
                  "type": "property"
                }
              }
            },
            "type": "ia.input.text-field"
          },
          {
            "events": {
              "component": {
                "onFileReceived": {
                  "config": {
                    "script": "\t#Get File Path To has been dropped\n\t#self.view.custom.filePath \u003d event[\u0027name\u0027]\n\t\n\t#Process File\n\tsystem.perspective.print(\"Reading File......\")\n\tfileBytes \u003d event.file.getBytes()\n\tsystem.perspective.print(\"Process File......\")\n\tdata \u003d Standard.Utilities.Excel.ExcelToList(bytesIn \u003d fileBytes,hasHeaders \u003d True)\n\tsystem.perspective.print(\"Process File......Done!\")\n\t#Add a unique key to assist with data row identification\n\tsystem.perspective.print(str(len(data)))\n\ti\u003d1\n\tfor row in data:\n\t\trow[\u0027localID\u0027] \u003d i\n\t\ti \u003d i+1\n\tself.view.custom.data \u003d data"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "FileUpload"
            },
            "position": {
              "basis": "145px"
            },
            "type": "ia.input.fileupload"
          }
        ],
        "meta": {
          "name": "flexContainerFilePath"
        },
        "position": {
          "basis": 100,
          "shrink": 0
        },
        "props": {
          "direction": "column"
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "labelBaseFolderPath"
            },
            "position": {
              "basis": "32px"
            },
            "props": {
              "style": {
                "backgroundColor": "#FFCCCC"
              },
              "text": "Container Collision Policy"
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "dropdownContainerCollisionPolicy"
            },
            "position": {
              "basis": "36px"
            },
            "propConfig": {
              "props.value": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "view.custom.collisionPolicy"
                  },
                  "type": "property"
                }
              }
            },
            "props": {
              "options": [
                {
                  "label": "Abort",
                  "value": "a"
                },
                {
                  "label": "Overwrite",
                  "value": "o"
                },
                {
                  "label": "Ignore",
                  "value": "i"
                },
                {
                  "label": "Merge",
                  "value": "m"
                }
              ]
            },
            "type": "ia.input.dropdown"
          }
        ],
        "meta": {
          "name": "flexContainerCollisionPolicy"
        },
        "position": {
          "basis": "\u002750\u0027"
        },
        "props": {
          "direction": "column"
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "labelBaseFolderPath"
            },
            "position": {
              "basis": "32px"
            },
            "props": {
              "style": {
                "backgroundColor": "#FFCCCC"
              },
              "text": "Base Folder Path"
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "textBaseFolderPath"
            },
            "position": {
              "basis": "32px"
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "view.custom.baseFolderPath"
                  },
                  "type": "property"
                }
              }
            },
            "type": "ia.input.text-field"
          }
        ],
        "meta": {
          "name": "flexContainerBaseFolderPath"
        },
        "position": {
          "basis": 50,
          "shrink": 0
        },
        "props": {
          "direction": "column"
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "labelModelItemPath"
            },
            "position": {
              "basis": "32px"
            },
            "props": {
              "style": {
                "backgroundColor": "#FFCCCC"
              },
              "text": "Model Item Path"
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "textModelItemPath"
            },
            "position": {
              "basis": "32px"
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "view.custom.modelItemPath"
                  },
                  "type": "property"
                }
              }
            },
            "type": "ia.input.text-field"
          }
        ],
        "meta": {
          "name": "flexContainerModelItemPath"
        },
        "position": {
          "basis": 50,
          "shrink": 0
        },
        "props": {
          "direction": "column"
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "labelModelItem"
            },
            "position": {
              "basis": "32px"
            },
            "props": {
              "style": {
                "backgroundColor": "#FFCCCC"
              },
              "text": "Model Item"
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "textModelItem"
            },
            "position": {
              "basis": "32px"
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "view.custom.modelItem"
                  },
                  "type": "property"
                }
              }
            },
            "type": "ia.input.text-field"
          }
        ],
        "meta": {
          "name": "flexContainerModelItem"
        },
        "position": {
          "basis": 50,
          "shrink": 0
        },
        "props": {
          "direction": "column"
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "labelControlModulePath"
            },
            "position": {
              "basis": "32px"
            },
            "props": {
              "style": {
                "backgroundColor": "#FFCCCC"
              },
              "text": "Control Module Path"
            },
            "type": "ia.display.label"
          },
          {
            "meta": {
              "name": "textControlModulePath"
            },
            "position": {
              "basis": "32px"
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "bidirectional": true,
                    "path": "view.custom.controlModulePath"
                  },
                  "type": "property"
                }
              }
            },
            "type": "ia.input.text-field"
          }
        ],
        "meta": {
          "name": "flexContainerControlModulePath"
        },
        "position": {
          "basis": 50,
          "shrink": 0
        },
        "props": {
          "direction": "column"
        },
        "type": "ia.container.flex"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\t# Import Python\u0027s built-in csv library\n\timport csv\n\t\n\t# Create Logger\n\tlogger \u003d system.util.getLogger(\u0027S95 Generator\u0027)\n\t\n\t# Read the csv file from the provided file path\n\tpath \u003d self.view.custom.filePath\n\tlogger.info(\"File Path \u003d \" + path)\n\t\n\tcsvData \u003d csv.reader(open(path))\n\theader \u003d csvData.next()\n\t\n\t#Get Header Positions\n\tfolderPathColumnIndex \u003d -1\n\ttry:\n\t\tfolderPathColumnIndex \u003d header.index(\u0027Folder Path\u0027)\n\texcept:\n\t\tlogger.error(\u0027Folder Path not listed in header \\n\u0027 + str(header))\n\t\n\tif folderPathColumnIndex \u003e\u003d 0:\n\t\t # Create a dataset with the header and the rest of our CSV.\n\t\tdataset \u003d system.dataset.toDataSet(header ,list(csvData))\n\t\tpyData \u003d system.dataset.toPyDataSet(dataset)\n\t\t\n\t\t# Set the collision policy to Abort. That way if a tag already exists at the base path,\n\t\t# we will not override the tag. If you are overwriting an existing tag, then set this to \"o\"\n\t\t#   a - Abort and throw an exception\n\t\t#   o - Overwrite and replace existing Tag\u0027s configuration\n\t\t#   i - Ignore that item in the list.\n\t\t#   m - merge, modifying values that are specified in the definition, without impacting values that aren\u0027t defined in the definition. Use this when you want to apply a slight change to tags, without having to build a complete configuration object.\n\t\t#   Defaults to Overwrite. [optional]\n\t\tcollisionPolicy \u003d self.view.custom.collisionPolicy\n\t\t\t\n\t\t# Iterate through the reader object\n\t\tfor row in pyData:\n\t\t\t#Generate the base tag path\n\t\t\ttagPath \u003d row[header.index(\u0027Folder Path\u0027)]\n\t\t\tif tagPath[0] \u003d\u003d \u0027\\\\\u0027:\n\t\t\t\ttagPath \u003d tagPath[1:]\t\t\t\n\t\t\tbaseTagPath \u003d self.view.custom.baseFolderPath+tagPath\n\t\t\t\n\t\t\t#Create the Model Item Tag\n\t\t\ttagName \u003d self.view.custom.modelItem\n\t\t\tmodelItemInstancePath \u003d baseTagPath + \u0027\\\\\u0027 + tagName\n\t\t\tif not system.tag.exists(modelItemInstancePath):\t\t\n\t\t\t\ttypeId \u003d self.view.custom.modelItemPath\n\t\t\t\ttagType \u003d \"UdtInstance\"\n\t\t\t\ttag \u003d {\n\t\t\t\t\t\t\t\"name\": tagName,         \n\t\t\t\t\t\t\t\"typeId\" : typeId,\n\t\t\t\t\t\t\t\"tagType\" : tagType\n\t\t\t\t\t\t\t,\"parameters\" : {}\n\t\t\t\t\t   }\n\t\t\t\tsystem.tag.configure(baseTagPath, [tag], collisionPolicy)\n\t\t\t\n\t\t\t#Create the Control Module Tag if Required\n\t\t\tif row[header.index(\u0027Control Module\u0027)] \u003c\u003e \"\":\n\t\t\t\ttagName \u003d row[header.index(\u0027Item\u0027)]\n\t\t\t\tdeviceName \u003d row[header.index(\u0027Control Module\u0027)]\n\t\t\t\ttypeId \u003d self.view.custom.controlModulePath + \u0027/\u0027 + row[header.index(\u0027UDT\u0027)]\n\t\t\t\ttagType \u003d \"UdtInstance\"\n\t\t\t\ttag \u003d {\n\t\t\t\t\t\t\t\"name\": tagName,         \n\t\t\t\t\t\t\t\"typeId\" : typeId,\n\t\t\t\t\t\t\t\"tagType\" : tagType\n\t\t\t\t\t\t\t,\"parameters\" : {\"DeviceName\": deviceName}\n\t\t\t\t\t   }\n\t\t\t\tsystem.tag.configure(baseTagPath, [tag], collisionPolicy)\t\t\n\t\t\t\t\n\t\t\t"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "buttonCSVLoad"
        },
        "position": {
          "basis": "34px"
        },
        "propConfig": {
          "props.enabled": {
            "binding": {
              "config": {
                "expression": "{view.custom.collisionPolicy}"
              },
              "transforms": [
                {
                  "fallback": false,
                  "inputType": "scalar",
                  "mappings": [
                    {
                      "input": "a",
                      "output": true
                    },
                    {
                      "input": "o",
                      "output": true
                    },
                    {
                      "input": "m",
                      "output": true
                    },
                    {
                      "input": "i",
                      "output": true
                    }
                  ],
                  "outputType": "scalar",
                  "type": "map"
                }
              ],
              "type": "expr"
            }
          }
        },
        "props": {
          "text": "Load CSV"
        },
        "type": "ia.input.button"
      },
      {
        "meta": {
          "name": "Table"
        },
        "position": {
          "basis": "400px"
        },
        "props": {
          "data": [
            {
              "city": {
                "align": "center",
                "editable": true,
                "justify": "left",
                "style": {
                  "backgroundColor": "#F7901D",
                  "classes": "some-class"
                },
                "value": "Folsom"
              },
              "country": "United States",
              "population": 77271
            },
            {
              "city": "Helsinki",
              "country": "Finland",
              "population": 635591
            },
            {
              "city": "Jakarta",
              "country": "Indonesia",
              "population": 10187595
            },
            {
              "city": "Madrid",
              "country": "Spain",
              "population": 3233527
            },
            {
              "city": "Prague",
              "country": "Czech Republic",
              "population": 1241664
            },
            {
              "city": "San Diego",
              "country": "United States",
              "population": 1406630
            },
            {
              "city": "San Francisco",
              "country": "United States",
              "population": 884363
            },
            {
              "city": "Shanghai",
              "country": "China",
              "population": 24153000
            },
            {
              "city": "Tokyo",
              "country": "Japan",
              "population": 13617000
            },
            {
              "city": "Washington, DC",
              "country": "United States",
              "population": 658893
            },
            {
              "city": "Wellington",
              "country": "New Zealand",
              "population": 405000
            },
            {
              "city": "Delhi",
              "country": "India",
              "population": 11034555
            },
            {
              "city": "Dhaka",
              "country": "Bangladesh",
              "population": 14399000
            },
            {
              "city": "Lagos",
              "country": "Nigeria",
              "population": 16060303
            },
            {
              "city": "Karachi",
              "country": "Pakistan",
              "population": 14910352
            },
            {
              "city": "Istanbul",
              "country": "Turkey",
              "population": 14025000
            },
            {
              "city": "Cairo",
              "country": "Egypt",
              "population": 10230350
            },
            {
              "city": "Mexico City",
              "country": "Mexico",
              "population": 8974724
            },
            {
              "city": "London",
              "country": "United Kingdom",
              "population": 8825001
            },
            {
              "city": "New York City",
              "country": "United States",
              "population": 8622698
            },
            {
              "city": "Tehran",
              "country": "Iran",
              "population": 8154051
            },
            {
              "city": "Bogota",
              "country": "Colombia",
              "population": 7878783
            },
            {
              "city": "Rio de Janeiro",
              "country": "Brazil",
              "population": 6429923
            },
            {
              "city": "Riyadh",
              "country": "Saudi Arabia",
              "population": 5676621
            },
            {
              "city": "Singapore",
              "country": "Singapore",
              "population": 5535000
            },
            {
              "city": "Saint Petersburg",
              "country": "Russia",
              "population": 5191690
            },
            {
              "city": "Sydney",
              "country": "Australia",
              "population": 208374
            },
            {
              "city": "Abidjan",
              "country": "Ivory Coast",
              "population": 4765000
            },
            {
              "city": "Dar es Salaam",
              "country": "Tanzania",
              "population": 4364541
            },
            {
              "city": "Wellington",
              "country": "New Zealand",
              "population": 405000
            },
            {
              "city": "Los Angeles",
              "country": "United States",
              "population": 3884307
            },
            {
              "city": "Berlin",
              "country": "Germany",
              "population": 3517424
            },
            {
              "city": "Jeddah",
              "country": "Saudi Arabia",
              "population": 3456259
            },
            {
              "city": "Kabul",
              "country": "Afghanistan",
              "population": 3414100
            },
            {
              "city": "Mashhad",
              "country": "Iran",
              "population": 3001184
            },
            {
              "city": "Milan",
              "country": "Italy",
              "population": 1359905
            },
            {
              "city": "Kiev",
              "country": "Ukraine",
              "population": 2908703
            },
            {
              "city": "Rome",
              "country": "Italy",
              "population": 2877215
            },
            {
              "city": "Chicago",
              "country": "United States",
              "population": 2695598
            },
            {
              "city": "Osaka",
              "country": "Japan",
              "population": 2691742
            },
            {
              "city": "Bandung",
              "country": "Indonesia",
              "population": 2575478
            },
            {
              "city": "Managua",
              "country": "Nicaragua",
              "population": 2560789
            },
            {
              "city": "Paris",
              "country": "France",
              "population": 2229621
            },
            {
              "city": "Shiraz",
              "country": "Iran",
              "population": 1869001
            },
            {
              "city": "Manila",
              "country": "Philippines",
              "population": 1780148
            },
            {
              "city": "Montreal",
              "country": "Canada",
              "population": 1649519
            },
            {
              "city": "Guadalajara",
              "country": "Mexico",
              "population": 1495189
            },
            {
              "city": "Dallas",
              "country": "United States",
              "population": 1317929
            },
            {
              "city": "Yerevan",
              "country": "Armenia",
              "population": 1060138
            },
            {
              "city": "Tunis",
              "country": "Tunisia",
              "population": 1056247
            }
          ]
        },
        "type": "ia.display.table"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column"
    },
    "type": "ia.container.flex"
  }
}