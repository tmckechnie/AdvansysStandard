{
  "custom": {
    "History": {
      "$": [
        "ds",
        192,
        1708531370827
      ],
      "$columns": [
        {
          "data": [
            "FillerProducing",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerProducing",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerProducing",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerProducing",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerProducing",
            "FillerProducing",
            "FillerProducing",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerProducing",
            "FillerCount",
            "FillerProducing",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerProducing",
            "FillerCount",
            "FillerProducing",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerProducing",
            "FillerCount",
            "FillerProducing",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerProducing",
            "FillerCount",
            "FillerProducing",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerProducing",
            "FillerCount",
            "FillerProducing",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerCount",
            "FillerProducing"
          ],
          "name": "path",
          "type": "String"
        },
        {
          "data": [
            1,
            15868,
            15875,
            15881,
            15887,
            15893,
            15899,
            15905,
            15911,
            15917,
            15923,
            15929,
            15936,
            15942,
            15948,
            15954,
            15960,
            15966,
            15972,
            15978,
            15984,
            15991,
            15997,
            16003,
            16009,
            16015,
            16021,
            16027,
            16033,
            16039,
            16046,
            16052,
            16058,
            16064,
            16070,
            16076,
            16081,
            16086,
            16091,
            0,
            16094,
            16098,
            16102,
            16106,
            16110,
            16113,
            1,
            16117,
            16121,
            16125,
            16129,
            16133,
            16137,
            16142,
            16147,
            16153,
            16159,
            16166,
            16172,
            16178,
            16184,
            16190,
            16196,
            16202,
            16208,
            16212,
            16218,
            16224,
            16230,
            16236,
            16242,
            16248,
            16254,
            16261,
            16267,
            16273,
            16279,
            16285,
            16291,
            16297,
            16303,
            16310,
            16316,
            16322,
            16328,
            16334,
            16340,
            16346,
            16352,
            16358,
            16364,
            16371,
            16377,
            16383,
            16389,
            16395,
            16401,
            16407,
            16413,
            16419,
            16426,
            16432,
            16438,
            16444,
            16450,
            16456,
            16462,
            16468,
            16475,
            16481,
            16487,
            16493,
            16499,
            16505,
            16511,
            16517,
            16523,
            16529,
            16536,
            16542,
            16548,
            16554,
            16560,
            16566,
            16572,
            16578,
            16584,
            16591,
            16597,
            16603,
            16609,
            16615,
            16621,
            16627,
            16633,
            16640,
            16646,
            16652,
            16658,
            16664,
            16670,
            16676,
            16682,
            16688,
            16694,
            16701,
            16707,
            16713,
            16719,
            16725,
            16731,
            16737,
            16743,
            16749,
            16755,
            16761,
            16766,
            16770,
            0,
            16774,
            16778,
            16781,
            16785,
            16789,
            16793,
            16797,
            16801,
            16804,
            16808,
            16812,
            16816,
            16820,
            16824,
            16827,
            16831,
            16835,
            16839,
            16843,
            16847,
            16850,
            16854,
            16858,
            16862,
            16866,
            16870,
            16873,
            16877,
            16881,
            16885,
            16887,
            1,
            0,
            1,
            16890,
            16896,
            16902,
            16909,
            16915,
            16921,
            16927,
            16933,
            16939,
            16945,
            16951,
            16957,
            16963,
            16970,
            16976,
            16982,
            16988,
            16994,
            16999,
            17004,
            17010,
            17017,
            17023,
            17029,
            17035,
            17041,
            17046,
            17052,
            17058,
            17064,
            17071,
            17077,
            17083,
            17089,
            17095,
            17101,
            17107,
            17113,
            17119,
            17125,
            17131,
            17137,
            17142,
            17148,
            17154,
            17160,
            17166,
            17172,
            17179,
            17184,
            17190,
            17196,
            17202,
            0,
            17208,
            1,
            17214,
            17221,
            17226,
            17233,
            17239,
            17245,
            17251,
            17257,
            17263,
            17268,
            17274,
            17279,
            17285,
            17292,
            17298,
            17304,
            17310,
            17316,
            17321,
            17327,
            17333,
            17340,
            17346,
            17352,
            17358,
            17364,
            17370,
            17376,
            17383,
            17388,
            17395,
            17401,
            17406,
            17412,
            17417,
            17423,
            17429,
            17435,
            17441,
            17447,
            17454,
            17459,
            17465,
            17471,
            17477,
            17483,
            17489,
            17495,
            17502,
            17508,
            17514,
            17520,
            17526,
            17532,
            17538,
            17543,
            17549,
            17555,
            17561,
            17567,
            17573,
            17579,
            17585,
            17591,
            17596,
            17602,
            17608,
            17615,
            17621,
            17627,
            17633,
            17639,
            17645,
            17651,
            17657,
            17664,
            17670,
            17676,
            17681,
            17686,
            17692,
            17698,
            17704,
            17710,
            17717,
            17723,
            17729,
            17734,
            17740,
            17746,
            17752,
            17758,
            17764,
            17771,
            17777,
            17783,
            17789,
            17795,
            17801,
            17807,
            17813,
            17818,
            17824,
            17830,
            17836,
            0,
            17842,
            1,
            17848,
            17854,
            17860,
            17866,
            17871,
            17878,
            17884,
            17890,
            17896,
            17902,
            17908,
            17914,
            17920,
            17926,
            17932,
            17939,
            17945,
            17951,
            17956,
            17961,
            17967,
            17973,
            0,
            17979,
            1,
            17985,
            17992,
            17998,
            18003,
            18009,
            18015,
            18021,
            18027,
            18033,
            18040,
            18046,
            18052,
            18058,
            18064,
            18070,
            18076,
            18082,
            18088,
            18094,
            18099,
            18105,
            18111,
            18117,
            18123,
            18129,
            18135,
            18140,
            18153,
            18159,
            18165,
            18171,
            18177,
            18189,
            18195,
            18202,
            18208,
            18214,
            18220,
            18226,
            18231,
            18236,
            18243,
            18248,
            18254,
            18261,
            18267,
            18273,
            18278,
            18284,
            18290,
            18296,
            18302,
            18308,
            18315,
            18321,
            18327,
            18333,
            18339,
            18345,
            18351,
            18357,
            18363,
            18368,
            18373,
            18379,
            18385,
            18391,
            0,
            18397,
            1,
            18403,
            18409,
            18414,
            18421,
            18427,
            18433,
            18439,
            18445,
            18451,
            18457,
            18463,
            18469,
            18476,
            18482,
            18488,
            18494,
            18500,
            18505,
            18510,
            18516,
            18523,
            18529,
            18535,
            18541,
            18547,
            18552,
            18558,
            18564,
            18570,
            18576,
            18583,
            18589,
            18595,
            18601,
            18607,
            18613,
            18619,
            18625,
            18631,
            18637,
            18643,
            18648,
            18654,
            18660,
            18666,
            18672,
            18678,
            18685,
            18690,
            18696,
            18702,
            18708,
            0,
            18714,
            1,
            18720,
            18726,
            18732,
            18739,
            18745,
            18751,
            18757,
            18763,
            18769,
            18774,
            18780,
            18785,
            18791,
            18798,
            18804,
            18810,
            18816,
            18822,
            18827,
            18833,
            18839,
            18846,
            18852,
            18858,
            18864,
            18870,
            18876,
            18882,
            18889,
            18894,
            18900,
            18907,
            18912,
            18918,
            18923,
            18929,
            18935,
            18941,
            18947,
            18953,
            18960,
            18965,
            18971,
            18977,
            18983,
            18989,
            18995,
            19001,
            19008,
            19014,
            19020,
            19026,
            19032,
            19038,
            19044,
            19049,
            19055,
            19061,
            19067,
            19073,
            19079,
            19085,
            19091,
            19097,
            19102,
            19108,
            19114,
            19121,
            19127,
            19133,
            19139,
            19145,
            19150,
            19156,
            19162,
            19169,
            19175,
            19181,
            19186,
            19191,
            19197,
            19203,
            19209,
            19215,
            19220,
            0
          ],
          "name": "value",
          "type": "Long"
        },
        {
          "data": [
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192,
            192
          ],
          "name": "quality",
          "type": "Integer"
        },
        {
          "data": [
            1708372720393,
            1708372799386,
            1708372800395,
            1708372801395,
            1708372802399,
            1708372803409,
            1708372804378,
            1708372805383,
            1708372806387,
            1708372807377,
            1708372808386,
            1708372809386,
            1708372810390,
            1708372811400,
            1708372812404,
            1708372813413,
            1708372814378,
            1708372815382,
            1708372816387,
            1708372817376,
            1708372818386,
            1708372819390,
            1708372820400,
            1708372821404,
            1708372822384,
            1708372823388,
            1708372824378,
            1708372825382,
            1708372826387,
            1708372827386,
            1708372828390,
            1708372829400,
            1708372830404,
            1708372831379,
            1708372832383,
            1708372833393,
            1708372834382,
            1708372835387,
            1708372836396,
            1708372836396,
            1708372837391,
            1708372838400,
            1708372839410,
            1708372840414,
            1708372841379,
            1708372842383,
            1708372842383,
            1708372843387,
            1708372844377,
            1708372845381,
            1708372846396,
            1708372847395,
            1708372848405,
            1708372849384,
            1708372850389,
            1708372851383,
            1708372852383,
            1708372853387,
            1708372854387,
            1708372855391,
            1708372856396,
            1708372857410,
            1708372858384,
            1708372859384,
            1708372860388,
            1708372864391,
            1708372865401,
            1708372866410,
            1708372867410,
            1708372868379,
            1708372869384,
            1708372870388,
            1708372871378,
            1708372872382,
            1708372873391,
            1708372874401,
            1708372875405,
            1708372876385,
            1708372877389,
            1708372878379,
            1708372879393,
            1708372880393,
            1708372881387,
            1708372882392,
            1708372883396,
            1708372884411,
            1708372885385,
            1708372886385,
            1708372887389,
            1708372888378,
            1708372889383,
            1708372890387,
            1708372891392,
            1708372892401,
            1708372893411,
            1708372894415,
            1708372895385,
            1708372896384,
            1708372897394,
            1708372898383,
            1708372899383,
            1708372900392,
            1708372901402,
            1708372902406,
            1708372903415,
            1708372904395,
            1708372905384,
            1708372906389,
            1708372907388,
            1708372908383,
            1708372909397,
            1708372910402,
            1708372911376,
            1708372912381,
            1708372913385,
            1708372914390,
            1708372915384,
            1708372916384,
            1708372917398,
            1708372918393,
            1708372919402,
            1708372920406,
            1708372921416,
            1708372922380,
            1708372923385,
            1708372924389,
            1708372925379,
            1708372926383,
            1708372927398,
            1708372928407,
            1708372929407,
            1708372930416,
            1708372931391,
            1708372932380,
            1708372933385,
            1708372934389,
            1708372935388,
            1708372936388,
            1708372937397,
            1708372938377,
            1708372939411,
            1708372940391,
            1708372941395,
            1708372942385,
            1708372943384,
            1708372944389,
            1708372945393,
            1708372946398,
            1708372947407,
            1708372948372,
            1708372949381,
            1708372950385,
            1708372951395,
            1708372952384,
            1708372953389,
            1708372954398,
            1708372955398,
            1708372956407,
            1708372956407,
            1708372957382,
            1708372958376,
            1708372959381,
            1708372960385,
            1708372961390,
            1708372962379,
            1708372963394,
            1708372964403,
            1708372965407,
            1708372966377,
            1708372967386,
            1708372968396,
            1708372969385,
            1708372970390,
            1708372971389,
            1708372972394,
            1708372973398,
            1708372974413,
            1708372975377,
            1708372976387,
            1708372977391,
            1708372978396,
            1708372979380,
            1708372980384,
            1708372981394,
            1708372982403,
            1708372983408,
            1708372984417,
            1708372985372,
            1708372986381,
            1708372987391,
            1708372988390,
            1708373009399,
            1708373010404,
            1708373010404,
            1708373011383,
            1708373012377,
            1708373013382,
            1708373014386,
            1708373015391,
            1708373016385,
            1708373017390,
            1708373018399,
            1708373019404,
            1708373020383,
            1708373021383,
            1708373022377,
            1708373023382,
            1708373024391,
            1708373025391,
            1708373026390,
            1708373027399,
            1708373028409,
            1708373029378,
            1708373030383,
            1708373031392,
            1708373032382,
            1708373033386,
            1708373034386,
            1708373035395,
            1708373036400,
            1708373037409,
            1708373038414,
            1708373039378,
            1708373040383,
            1708373041392,
            1708373042376,
            1708373043386,
            1708373044395,
            1708373045400,
            1708373046379,
            1708373047384,
            1708373048383,
            1708373049378,
            1708373050382,
            1708373051387,
            1708373052381,
            1708373053391,
            1708373054405,
            1708373055405,
            1708373056379,
            1708373057383,
            1708373058393,
            1708373059377,
            1708373060387,
            1708373061386,
            1708373062391,
            1708373062391,
            1708373063400,
            1708373063400,
            1708373064410,
            1708373065419,
            1708373066379,
            1708373067383,
            1708373068393,
            1708373069377,
            1708373070387,
            1708373071396,
            1708373072400,
            1708373073405,
            1708373074384,
            1708373075389,
            1708373076378,
            1708373077383,
            1708373078387,
            1708373079387,
            1708373080391,
            1708373081401,
            1708373082405,
            1708373083375,
            1708373084384,
            1708373085389,
            1708373086378,
            1708373087387,
            1708373088387,
            1708373089396,
            1708373090401,
            1708373091410,
            1708373092420,
            1708373093379,
            1708373094384,
            1708373095388,
            1708373096378,
            1708373097382,
            1708373098397,
            1708373099401,
            1708373100376,
            1708373101385,
            1708373102390,
            1708373103379,
            1708373104383,
            1708373105388,
            1708373106387,
            1708373107392,
            1708373108401,
            1708373109406,
            1708373110380,
            1708373111385,
            1708373112394,
            1708373113384,
            1708373114388,
            1708373115388,
            1708373116397,
            1708373117402,
            1708373118411,
            1708373119415,
            1708373120375,
            1708373121384,
            1708373122389,
            1708373123378,
            1708373124383,
            1708373125397,
            1708373126402,
            1708373127406,
            1708373128386,
            1708373129385,
            1708373130375,
            1708373131384,
            1708373132389,
            1708373133383,
            1708373134397,
            1708373135407,
            1708373136371,
            1708373137386,
            1708373138385,
            1708373139390,
            1708373140379,
            1708373141389,
            1708373142388,
            1708373143393,
            1708373144402,
            1708373145412,
            1708373146376,
            1708373147381,
            1708373148385,
            1708373149389,
            1708373150384,
            1708373151388,
            1708373152393,
            1708373153402,
            1708373154412,
            1708373155386,
            1708373156391,
            1708373157385,
            1708373158385,
            1708373159389,
            1708373160389,
            1708373161398,
            1708373162403,
            1708373163377,
            1708373164381,
            1708373165386,
            1708373166390,
            1708373167380,
            1708373168384,
            1708373168384,
            1708373169389,
            1708373169389,
            1708373170393,
            1708373171403,
            1708373172407,
            1708373173372,
            1708373174381,
            1708373175386,
            1708373176390,
            1708373177380,
            1708373178384,
            1708373179393,
            1708373180398,
            1708373181412,
            1708373182417,
            1708373183376,
            1708373184381,
            1708373185380,
            1708373186390,
            1708373187384,
            1708373188399,
            1708373189403,
            1708373190378,
            1708373191382,
            1708373191382,
            1708373192387,
            1708373192387,
            1708373193376,
            1708373194386,
            1708373195385,
            1708373196389,
            1708373197394,
            1708373198403,
            1708373199408,
            1708373200377,
            1708373201377,
            1708373202386,
            1708373203396,
            1708373204380,
            1708373205385,
            1708373206394,
            1708373207399,
            1708373208413,
            1708373209417,
            1708373210377,
            1708373211381,
            1708373212381,
            1708373213390,
            1708373214385,
            1708373215394,
            1708373216404,
            1708373217378,
            1708373218383,
            1708373219387,
            1708373221376,
            1708373222386,
            1708373223390,
            1708373224395,
            1708373225404,
            1708373227378,
            1708373228382,
            1708373229392,
            1708373230376,
            1708373231381,
            1708373232390,
            1708373233395,
            1708373234404,
            1708373235414,
            1708373236418,
            1708373237378,
            1708373238382,
            1708373239387,
            1708373240376,
            1708373241385,
            1708373242395,
            1708373243404,
            1708373244409,
            1708373245383,
            1708373246383,
            1708373247372,
            1708373248382,
            1708373249386,
            1708373250391,
            1708373251395,
            1708373252405,
            1708373253409,
            1708373254379,
            1708373255383,
            1708373256382,
            1708373257377,
            1708373258381,
            1708373259386,
            1708373260395,
            1708373261400,
            1708373261400,
            1708373262409,
            1708373262409,
            1708373263384,
            1708373264378,
            1708373265383,
            1708373266387,
            1708373267382,
            1708373268386,
            1708373269396,
            1708373270400,
            1708373271379,
            1708373272379,
            1708373273383,
            1708373274383,
            1708373275377,
            1708373276387,
            1708373277386,
            1708373278396,
            1708373279405,
            1708373280410,
            1708373281379,
            1708373282384,
            1708373283388,
            1708373284383,
            1708373285382,
            1708373286386,
            1708373287396,
            1708373288405,
            1708373289410,
            1708373290414,
            1708373291379,
            1708373292383,
            1708373293393,
            1708373294382,
            1708373295387,
            1708373296391,
            1708373297406,
            1708373298380,
            1708373299415,
            1708373300394,
            1708373301379,
            1708373302383,
            1708373303387,
            1708373304382,
            1708373305401,
            1708373306406,
            1708373307410,
            1708373308380,
            1708373309384,
            1708373310394,
            1708373311378,
            1708373312383,
            1708373313387,
            1708373314392,
            1708373314392,
            1708373315401,
            1708373315401,
            1708373316411,
            1708373317385,
            1708373318379,
            1708373319384,
            1708373320388,
            1708373321378,
            1708373322382,
            1708373323397,
            1708373324406,
            1708373325406,
            1708373326385,
            1708373327390,
            1708373328384,
            1708373329384,
            1708373330388,
            1708373331383,
            1708373332392,
            1708373333406,
            1708373334411,
            1708373335380,
            1708373336385,
            1708373337389,
            1708373338374,
            1708373339383,
            1708373340393,
            1708373341392,
            1708373342397,
            1708373343411,
            1708373344421,
            1708373345380,
            1708373346380,
            1708373347389,
            1708373348378,
            1708373349383,
            1708373350392,
            1708373351397,
            1708373352406,
            1708373353381,
            1708373354390,
            1708373355380,
            1708373356384,
            1708373357389,
            1708373358383,
            1708373359398,
            1708373360402,
            1708373361377,
            1708373362381,
            1708373363385,
            1708373364390,
            1708373365379,
            1708373366384,
            1708373367388,
            1708373368393,
            1708373369402,
            1708373370407,
            1708373371376,
            1708373372381,
            1708373373390,
            1708373374390,
            1708373375384,
            1708373376389,
            1708373377393,
            1708373378402,
            1708373379412,
            1708373380386,
            1708373381391,
            1708373382380,
            1708373383380,
            1708373384389,
            1708373385389,
            1708373386398,
            1708373387403,
            1708373388377,
            1708373389387,
            1708373390386,
            1708373391391,
            1708373392380,
            1708373393385,
            1708373394389,
            1708373395393,
            1708373396408,
            1708373397412,
            1708373398377,
            1708373399381,
            1708373400386,
            1708373420385
          ],
          "name": "timestamp",
          "type": "Date"
        }
      ]
    },
    "ccbaTags": {
      "bit": "[AdvansysStandard/default:default]CAN01VS1/ZA013/L3_Filler3/PLC/FillerProducing",
      "count": "[AdvansysStandard/default:default]CAN01VS1/ZA013/L3_Filler3/PLC/FillerCount"
    },
    "config": {
      "duration": 10,
      "periodStart": {
        "$": [
          "ts",
          192,
          1708526327071
        ],
        "$ts": 1708372800000
      },
      "tags": {
        "bit": "[AdvansysStandard/default:default]CAN01VS1/ZA013/L3_Filler3/PLC/FillerProducing",
        "count": "[AdvansysStandard/default:default]CAN01VS1/ZA013/L3_Filler3/PLC/FillerCount"
      }
    },
    "returnFormat": "Tall",
    "testIgnitionTags": {
      "bit": "[IGNStandard/advansysprimary:advansysstandard]standard/widetest/bit",
      "count": "[IGNStandard/advansysprimary:advansysstandard]standard/widetest/count"
    },
    "testTags": {
      "bit": "[TEST01/default:default]CAN01VS1/TEST01/Standard/WideTest/Bit",
      "count": "[TEST01/default:default]CAN01VS1/TEST01/Standard/WideTest/Count"
    }
  },
  "params": {},
  "propConfig": {
    "custom.History": {
      "binding": {
        "config": {
          "struct": {
            "config": "{view.custom.config}",
            "returnFormat": "{view.custom.returnFormat}"
          },
          "waitOnAll": true
        },
        "transforms": [
          {
            "code": "\ttags \u003d value[\u0027config\u0027][\u0027tags\u0027]\n\tstartDate \u003d  value[\u0027config\u0027][\u0027periodStart\u0027]\n\tduration \u003d  value[\u0027config\u0027][\u0027duration\u0027]\n\tpathBit \u003d tags[\u0027bit\u0027]\n\tpathCount \u003d tags[\u0027count\u0027]\n\t#return [pathBit,pathCount]\n\tpaths \u003d [pathBit,pathCount]\n#\tstartDate \u003d system.date.getDate(2024, 1, 19)\n#\tstartDate \u003d system.date.addHours(startDate, 22)\n\tendDate \u003d system.date.addMinutes(startDate, duration)\n\taggregationMode \u003d None\n\tcolumnNames \u003d [\u0027Bit\u0027,\u0027Count\u0027]\n\tintervalHours \u003d None\n\tintervalMinutes \u003d None\n\trangeHours \u003d None\n\trangeMinutes \u003d None\n\taggregationModes \u003d None\n\tvalidateSCExec \u003d None\n\tnoInterpolation \u003d True\n\tincludeBoundingValues\u003dTrue\n\tignoreBadQuality \u003d False\n\tintervalSeconds \u003d None\n\trangeSeconds \u003d None\n\treturnFormat\u003dvalue[\u0027returnFormat\u0027]\n\treturnSize\u003d-1\n\tdataset \u003d  system.tag.queryTagHistory(paths\u003dpaths,columnNames\u003dcolumnNames,startDate\u003dstartDate,endDate\u003dendDate,returnSize\u003dreturnSize,includeBoundingValues\u003dincludeBoundingValues,noInterpolation\u003dnoInterpolation,returnFormat\u003dreturnFormat)\n\treturn dataset\n\tconvertedArry \u003d []\n\tfor row in range(dataset.getRowCount()):\n\t\tconvertedRow\u003d{}\n\t\tfor col in dataset.getColumnNames():\n\t\t\tconvertedRow[col] \u003d dataset.getValueAt(row, col)\n\t\tconvertedArry.append(convertedRow)\n\ttoJsonString\u003dsystem.util.jsonEncode(convertedArry)\n\treturn convertedArry\n\t\n\treturn Standard.Utilities.Common.GetListFromDataset(dataset)\n\treturn value",
            "type": "script"
          }
        ],
        "type": "expr-struct"
      },
      "persistent": true
    },
    "custom.ccbaTags": {
      "persistent": true
    },
    "custom.config": {
      "persistent": true
    },
    "custom.returnFormat": {
      "persistent": true
    },
    "custom.testIgnitionTags": {
      "persistent": true
    },
    "custom.testTags": {
      "persistent": true
    }
  },
  "props": {},
  "root": {
    "children": [
      {
        "meta": {
          "name": "Dropdown"
        },
        "position": {
          "basis": "36px",
          "shrink": 0
        },
        "propConfig": {
          "props.value": {
            "binding": {
              "config": {
                "bidirectional": true,
                "path": "view.custom.returnFormat"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "options": [
            {
              "label": "Tall",
              "value": "Tall"
            },
            {
              "label": "Wide",
              "value": "Wide"
            }
          ]
        },
        "type": "ia.input.dropdown"
      },
      {
        "children": [
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\tself.view.custom.config.tags\u003dself.view.custom.testTags"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "ButtonRequestTestTags"
            },
            "position": {
              "basis": "150px",
              "shrink": 0
            },
            "props": {
              "style": {
                "margin": 5
              },
              "text": "Request Canary Test Tags"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\tself.view.custom.config.tags\u003dself.view.custom.testIgnitionTags"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "ButtonRequestTestIgnitionTags"
            },
            "position": {
              "basis": "150px",
              "shrink": 0
            },
            "props": {
              "style": {
                "margin": 5
              },
              "text": "Request Test Ignition Tags"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\tself.view.custom.config.tags\u003dself.view.custom.ccbaTags"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "ButtonRequestCCBATags"
            },
            "position": {
              "basis": "150px",
              "shrink": 0
            },
            "props": {
              "style": {
                "margin": 5
              },
              "text": "Request CCBA Tags"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\tself.view.custom.config.tags\u003dself.view.custom.testTags\n\t\n\thistoryprovider \u003d \u0027TEST01\u0027\n\ttagprovider \u003d \u0027AdvansysStandard\u0027\n\tpathBit \u003d \u0027Standard/WideTest/Bit\u0027\n\tpathCount \u003d \u0027Standard/WideTest/Count\u0027\n\tperiodStart \u003d self.view.custom.config.periodStart\n\t#Start a few millis before PeriodStart\n\tbitPeriodStart \u003d system.date.addMillis(periodStart,-123456)\n\tcountPeriodStart \u003d system.date.addMillis(periodStart,-123356)\n\t#print [bitPeriodStart,countPeriodStart]\n\timport random\n\trate \u003d 2000 #part per minute\n\tcountTs \u003d countPeriodStart\n\tbitTs \u003d bitPeriodStart\n\tpaths \u003d []\n\tvalues \u003d []\n\ttimestamps \u003d []\n\tqualities \u003d []\n\tcount \u003d 0\n\tbit \u003d False\n\tfor i in range(0,30):\n\t\t#count\n\t\tmillis \u003d random.randint(20000.0,70000.0) #rate\n\t\tcountTs \u003d system.date.addMillis(countTs, millis)\n\t\tpaths.append(pathCount)\n\t\tcountAdd \u003d random.randint(10,30)\n\t\tcount \u003d count + countAdd\n\t\tvalues.append(count)\n\t\ttimestamps.append(countTs)\n\t\tqualities.append(192)\n\t\t#bit\n\t\tmillis \u003d random.randint(20000.0,70000.0) #rate\n\t\tbitTs \u003d system.date.addMillis(bitTs, millis)\n\t\tprint [countTs,bitTs]\n\t\tpaths.append(pathBit)\n\t\tvalues.append(bit)\n\t\ttimestamps.append(bitTs)\n\t\tqualities.append(192)\n\t\tbit \u003d not bit\n\t\t\n\t\n\tsystem.tag.storeTagHistory(historyprovider, tagprovider, paths, values, qualities, timestamps)\n\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "ButtonCreateTestTags"
            },
            "position": {
              "basis": "150px",
              "shrink": 0
            },
            "props": {
              "style": {
                "margin": 5
              },
              "text": "Create Canary Test Tags"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\tself.view.custom.config.tags\u003dself.view.custom.testTags\n\t\n\thistoryprovider \u003d \u0027IGNStandard\u0027\n\ttagprovider \u003d \u0027AdvansysStandard\u0027\n\tpathBit \u003d \u0027Standard/WideTest/Bit\u0027\n\tpathCount \u003d \u0027Standard/WideTest/Count\u0027\n\tperiodStart \u003d self.view.custom.config.periodStart\n\t#Start a few millis before PeriodStart\n\tbitPeriodStart \u003d system.date.addMillis(periodStart,-123456)\n\tcountPeriodStart \u003d system.date.addMillis(periodStart,-123356)\n\t#print [bitPeriodStart,countPeriodStart]\n\timport random\n\trate \u003d 2000 #part per minute\n\tcountTs \u003d countPeriodStart\n\tbitTs \u003d bitPeriodStart\n\tpaths \u003d []\n\tvalues \u003d []\n\ttimestamps \u003d []\n\tqualities \u003d []\n\tcount \u003d 0\n\tbit \u003d False\n\tfor i in range(0,30):\n\t\t#count\n\t\tmillis \u003d random.randint(20000.0,70000.0) #rate\n\t\tcountTs \u003d system.date.addMillis(countTs, millis)\n\t\tpaths.append(pathCount)\n\t\tcountAdd \u003d random.randint(10,30)\n\t\tcount \u003d count + countAdd\n\t\tvalues.append(count)\n\t\ttimestamps.append(countTs)\n\t\tqualities.append(192)\n\t\t#bit\n\t\tmillis \u003d random.randint(20000.0,70000.0) #rate\n\t\tbitTs \u003d system.date.addMillis(bitTs, millis)\n\t\tprint [countTs,bitTs]\n\t\tpaths.append(pathBit)\n\t\tvalues.append(bit)\n\t\ttimestamps.append(bitTs)\n\t\tqualities.append(192)\n\t\tbit \u003d not bit\n\t\t\n\t\n\tsystem.tag.storeTagHistory(historyprovider, tagprovider, paths, values, qualities, timestamps)\n\t"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "ButtonCreateTestIgnitionTags"
            },
            "position": {
              "basis": "150px",
              "shrink": 0
            },
            "props": {
              "style": {
                "margin": 5
              },
              "text": "Create Ignition Test Tags"
            },
            "type": "ia.input.button"
          }
        ],
        "meta": {
          "name": "FlexContainer"
        },
        "position": {
          "basis": "60px",
          "shrink": 0
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "TableTall"
        },
        "position": {
          "basis": "400px",
          "grow": 1
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "{view.custom.returnFormat} \u003d \"Tall\""
              },
              "type": "expr"
            }
          },
          "props.data": {
            "binding": {
              "config": {
                "path": "view.custom.History"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "columns": [
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "DD HH:mm:ss.SSS",
              "editable": false,
              "field": "timestamp",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": "Timestamp"
              },
              "justify": "auto",
              "nullFormat": {
                "includeNullStrings": false,
                "nullFormatValue": "",
                "strict": false
              },
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "date",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "DD HH:mm:ss.SSS",
              "editable": false,
              "field": "path",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": "Tag"
              },
              "justify": "auto",
              "nullFormat": {
                "includeNullStrings": false,
                "nullFormatValue": "",
                "strict": false
              },
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "string",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "DD HH:mm:ss.SSS",
              "editable": false,
              "field": "value",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": "Value"
              },
              "justify": "auto",
              "nullFormat": {
                "includeNullStrings": false,
                "nullFormatValue": "",
                "strict": false
              },
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "number",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            }
          ],
          "pager": {
            "activePage": 2,
            "initialOption": 100
          },
          "selection": {
            "data": [
              {
                "path": "FillerProducing",
                "timestamp": 1708373009399,
                "value": 0
              }
            ],
            "selectedColumn": "value",
            "selectedRow": 191
          }
        },
        "type": "ia.display.table"
      },
      {
        "meta": {
          "name": "TableWide"
        },
        "position": {
          "basis": "400px",
          "grow": 1
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "{view.custom.returnFormat} \u003d \"Wide\""
              },
              "type": "expr"
            }
          },
          "props.data": {
            "binding": {
              "config": {
                "path": "view.custom.History"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "columns": [
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "DD HH:mm:ss.SSS",
              "editable": false,
              "field": "t_stamp",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": "Timestamp"
              },
              "justify": "auto",
              "nullFormat": {
                "includeNullStrings": false,
                "nullFormatValue": "",
                "strict": false
              },
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "date",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "DD HH:mm:ss.SSS",
              "editable": false,
              "field": "count",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "justify": "auto",
              "nullFormat": {
                "includeNullStrings": false,
                "nullFormatValue": "",
                "strict": false
              },
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "number",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "DD HH:mm:ss.SSS",
              "editable": false,
              "field": "bit",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "justify": "auto",
              "nullFormat": {
                "includeNullStrings": false,
                "nullFormatValue": "",
                "strict": false
              },
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "boolean",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            }
          ],
          "pager": {
            "initialOption": 100
          },
          "selection": {
            "data": [
              {
                "path": "FillerCount",
                "quality": 192,
                "value": 15881
              }
            ],
            "selectedRow": 3
          }
        },
        "type": "ia.display.table"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column"
    },
    "type": "ia.container.flex"
  }
}